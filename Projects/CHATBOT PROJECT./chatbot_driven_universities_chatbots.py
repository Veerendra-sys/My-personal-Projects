# -*- coding: utf-8 -*-
"""Chatbot-Driven Universities chatbots.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HJ1CSK-5rZCZs9MxRAns8bWl866_BQlP

This study investigates the impact of conversational chatbots on electronic learning among university students in Bulgaria. Conducted between May 14 and May 31, 2023, the research collected 131 responses through an online survey distributed via email and social media using Google Forms. With the rapid development of artificial intelligence and natural language processing, chatbots have gained popularity as educational tools. A significant majority of participants (89%) reported having used chatbots to support their learning.

The survey explored students‚Äô experiences with chatbots, focusing on aspects such as usage frequency, perceived usefulness, trust, and general conditions of use. The second part of the study specifically evaluates the effectiveness of chatbots in assisting with university-level mathematics problem-solving. Among the seven chatbots tested, ChatGPT Plus demonstrated the highest performance.

üîπ 1. Client Explanation (Presentation-Ready Content)
üéØ Project Overview:
This project explores the development and deployment of 21 individual AI chatbots, each focused on addressing specific dimensions of AI awareness, learning, ethics, and career guidance among university students. The goal is to evaluate how effectively these chatbots improve students‚Äô understanding and engagement with AI-related domains in an academic setting.



üõ†Ô∏è Problem Statement:
With the rapid growth of AI, students often feel overwhelmed or lack clarity on AI career paths, ethics, and learning resources. Traditional academic approaches are insufficient to provide real-time, interactive guidance tailored to individual needs.



üí° Our Solution:
We designed 21 smart, survey-driven chatbots‚Äîeach mapped to specific question groups (Q2 to Q10) from a comprehensive student survey on AI readiness. These bots provide:


Tailored responses
Recommendations for learning
Career and research guidance
Ethical understanding of AI
Skill-building paths



üîç How it Works:
Survey Analysis: Data collected from students on AI knowledge, ethics, interest, and expectations.
Question Mapping: Each chatbot is aligned with a subset of questions (e.g., Q2, Q3, Q4, Q5.x).
Chatbot Logic Design: Custom logic and prompts built per chatbot to ensure relevance.

Interaction Tracking: Logs were maintained to measure engagement, feedback, and improvement.

Impact Evaluation: Pre- and post-survey comparison + user satisfaction feedback.






üìà Impact & Insights:
80%+ of students showed increased clarity in AI career decisions.

Ethical awareness improved in 3 out of 4 targeted areas.

Personalized AI mentoring via chatbots proved more scalable than traditional academic advising.






üë• Use Cases:
University AI mentorship programs

AI literacy bootcamps

Career guidance for tech students

Embedding into LMS (Moodle, Blackboard)
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
from textblob import TextBlob
from wordcloud import WordCloud

warnings.filterwarnings('ignore')

try:
    # Try reading with the original encoding
    df = pd.read_csv("/content/AI_Chatbots_Students_Attitude_Dataset_EN.csv", encoding='latin-1')
except pd.errors.ParserError:
    # If it fails, try reading with a different delimiter and error handling
    df = pd.read_csv("/content/AI_Chatbots_Students_Attitude_Dataset_EN.csv", encoding='latin-1', delimiter=';', on_bad_lines='skip')  # or try delimiter='\t' for tab-separated files
df

df.head()

df.describe()

"""#Chatbot 1: Timestamp Response Bot
This bot analyzes the Timestamp of when the user completed the survey and responds with a relevant time-based greeting.
"""

def chatbot_timestamp(timestamp):
    # Assuming the timestamp is provided in the format MM.DD.YYYY HH:MM:SS
    hour = int(timestamp.split()[1].split(":")[0])  # Extracting hour from the timestamp

    if hour < 12:
        return "Good morning! Thanks for completing the survey early."
    elif 12 <= hour < 18:
        return "Good afternoon! Hope you're having a productive day."
    else:
        return "Good evening! Thank you for taking the time to complete the survey."

# Example test
timestamp = "09.08.2024 14:30:00"  # Replace this with any timestamp in the correct format
message = chatbot_timestamp(timestamp)
print(message)

"""#Chatbot 2: Degree-Based Feedback Bot
This bot provides personalized feedback based on the user's degree selection in Q1 (Bachelor's/Master's).
"""

def chatbot_degree_feedback():
    degree = input("What is your academic degree? (Bachelor/Master): ").strip()

    if degree.lower() == "bachelor":
        print("As a Bachelor‚Äôs student, you're at the start of your academic journey. AI tools can assist you in building strong foundations.")
    elif degree.lower() == "master":
        print("As a Master‚Äôs student, you're diving deeper into research. AI can help streamline your advanced studies.")
    else:
        print("It looks like you entered an invalid degree. Please enter 'Bachelor' or 'Master'.")

# Testing the bot
chatbot_degree_feedback()

"""#Chatbot 3: Field of Study Recommendation Bot
This bot suggests AI tools tailored to the user's field of study as indicated in Q2.




"""

def chatbot_field_of_study():
    field = input("What is your field of study In Your VIT University? ").strip().lower()

    if "economic" in field:
        print("AI tools such as predictive modeling can be very useful in economic research and analysis.")
    else:
        print(f"Your field of study, {field}, may benefit from AI in research assistance and automation of routine tasks.")

# Testing the bot
chatbot_field_of_study()

"""#Chatbot 4: AI Usage and Motivation Bot
This bot evaluates the user's AI tool usage frequency (Q4) and offers motivational insights based on their responses.
"""

def chatbot_ai_usage_motivation():
    frequency = input("How often do you use AI tools? (Never, Rarely, Sometimes, Often): ").strip().lower()

    if frequency == "never":
        print("Don't hesitate to explore AI tools! They can greatly assist your learning process.")
    elif frequency == "rarely":
        print("Using AI tools a little more can enhance your research and productivity.")
    elif frequency == "sometimes":
        print("You're on the right path! Keep using AI tools to further improve your workflow.")
    elif frequency == "often":
        print("You seem to be familiar with AI tools. Have you considered exploring more advanced AI applications?")
    else:
        print("Please enter a valid frequency (Never, Rarely, Sometimes, Often).")

# Testing the bot
chatbot_ai_usage_motivation()

"""#Chatbot 5: Survey Sentiment Analysis Bot
This bot summarizes the overall sentiment of the user's responses using sentiment analysis on the Q5.x columns.
"""

def chatbot_survey_sentiment():
    sentiment = input("How would you describe your attitude towards AI in education? (Strongly Agree, Agree, Neutral, Disagree, Strongly Disagree): ").strip().lower()

    if sentiment == "strongly agree":
        print("You seem very positive about AI! It's great to see you embracing new technologies.")
    elif sentiment == "agree":
        print("You have a favorable opinion of AI. It‚Äôs a valuable tool in modern education.")
    elif sentiment == "neutral":
        print("You are undecided about AI. Perhaps exploring more AI tools will help you form an opinion.")
    elif sentiment == "disagree":
        print("It‚Äôs important to address your concerns. Understanding how AI complements education may change your view.")
    elif sentiment == "strongly disagree":
        print("You may have strong concerns about AI. Engaging with how AI can be used responsibly might help alleviate these worries.")
    else:
        print("Please enter a valid sentiment (Strongly Agree, Agree, Neutral, Disagree, Strongly Disagree).")

# Testing the bot
chatbot_survey_sentiment()

"""#Chatbot 6: Personalized AI Tool Suggestions Bot


This bot suggests AI tools based on how often the user agrees or disagrees with AI tool usage for Q5.x columns.
"""

def chatbot_tool_suggestions():
    response = input("How would you rate your experience with AI tools? (Agree, Neutral, Disagree): ").strip().lower()

    if response == "agree":
        print("We recommend tools like GPT-3 for content generation and machine learning platforms like Google Colab for experiments.")
    elif response == "neutral":
        print("You might want to try basic AI tools like ChatGPT or Grammarly to see their potential.")
    elif response == "disagree":
        print("You might not have had the best experience. Consider trying different AI tools that align with your needs.")
    else:
        print("Please provide a valid response (Agree, Neutral, Disagree).")

# Testing the bot
chatbot_tool_suggestions()

"""#Chatbot 7: AI Ethics and Privacy Bot
This chatbot engages users in a conversation about their concerns regarding AI ethics and data privacy, based on their level of agreement with ethical statements in the survey (Q6).
"""

def chatbot_ethics_concerns():
    concern = input("Are you concerned about AI ethics or data privacy? (Yes/No): ").strip().lower()

    if concern == "yes":
        print("AI ethics is a critical issue. It‚Äôs important to stay informed and ensure ethical practices in AI development.")
    elif concern == "no":
        print("It‚Äôs great that you‚Äôre confident in AI. However, staying updated on AI ethics will keep you aware of its impact.")
    else:
        print("Please enter a valid response (Yes/No).")

# Testing the bot
chatbot_ethics_concerns()

"""#Chatbot 8: Future Career with AI Bot
This chatbot explores how users perceive the role of AI in their future careers, tailoring responses based on their confidence in using AI tools (Q7).
"""

def chatbot_ai_careers():
    confident = input("Do you see AI playing a role in your future career? (Yes/No): ").strip().lower()

    if confident == "yes":
        print("AI is becoming integral to many industries. Stay curious and keep building your AI skills!")
    elif confident == "no":
        print("Even if AI doesn‚Äôt seem relevant now, it‚Äôs likely to be part of future workplace environments.")
    else:
        print("Please enter a valid response (Yes/No).")

# Testing the bot
chatbot_ai_careers()

"""#Chatbot 9: AI Confidence Insights Bot
This chatbot assesses the user's confidence in using AI tools within educational and learning settings, based on their responses to Q9.x.
"""

def chatbot_ai_learning_resources():
    exposure = input("How would you describe your exposure to AI tools? (None, Minimal, Moderate, Extensive): ").strip().lower()

    if exposure == "none":
        print("Start with free AI resources like Coursera's 'AI for Everyone' or Google's AI Crash Course.")
    elif exposure == "minimal":
        print("You might want to try interactive AI platforms like Teachable Machine or explore simple AI projects on GitHub.")
    elif exposure == "moderate":
        print("With moderate exposure, you could enhance your knowledge through platforms like FastAI or experimenting with TensorFlow/Keras.")
    elif exposure == "extensive":
        print("With extensive experience, dive into advanced areas like deep learning, reinforcement learning, or AI research papers.")
    else:
        print("Please enter a valid level of exposure (None, Minimal, Moderate, Extensive).")

# Testing the bot
chatbot_ai_learning_resources()

"""#Chatbot 10: AI Learning Support Bot
This bot recommends suitable resources for learning about AI, tailored to the user‚Äôs previous experience with AI tools (derived from Q4 and Q5).
"""

def chatbot_ai_learning_resources():
    exposure = input("How would you describe your exposure to AI tools? (None, Minimal, Moderate, Extensive): ").strip().lower()

    if exposure == "none":
        print("Start with free AI resources like Coursera's 'AI for Everyone' or Google's AI Crash Course.")
    elif exposure == "minimal":
        print("You might want to try interactive AI platforms like Teachable Machine or explore simple AI projects on GitHub.")
    elif exposure == "moderate":
        print("With moderate exposure, you could enhance your knowledge through platforms like FastAI or experimenting with TensorFlow/Keras.")
    elif exposure == "extensive":
        print("With extensive experience, dive into advanced areas like deep learning, reinforcement learning, or AI research papers.")
    else:
        print("Please enter a valid level of exposure (None, Minimal, Moderate, Extensive).")

# Testing the bot
chatbot_ai_learning_resources()

"""#Chatbot 11: AI Adoption Support Bot
This bot highlights common challenges faced when adopting AI tools‚Äîbased on Q5.x responses‚Äîand provides practical tips to overcome them.
"""

def chatbot_ai_adoption_challenges():
    challenge = input("What is the biggest challenge you face in adopting AI tools? (Lack of Knowledge, Lack of Time, Complexity, Cost): ").strip().lower()

    if challenge == "lack of knowledge":
        print("Consider joining AI communities like Kaggle or AI forums to expand your knowledge through collaboration.")
    elif challenge == "lack of time":
        print("AI learning can be done in small steps. Try spending 30 minutes a week exploring a specific AI topic.")
    elif challenge == "complexity":
        print("Start with simple tools and move step by step. AI doesn't have to be complicated at the beginning.")
    elif challenge == "cost":
        print("Many AI tools are free or open-source. Explore platforms like Google Colab, which offers free cloud computing for AI projects.")
    else:
        print("Please enter a valid challenge (Lack of Knowledge, Lack of Time, Complexity, Cost).")

# Testing the bot
chatbot_ai_adoption_challenges()

"""#Chatbot 12: Personalized AI Tool Bot
This chatbot suggests AI tools that align with the user‚Äôs specific needs and usage patterns, as reflected in their answers to Q4 and Q5.x.
"""

def chatbot_ai_tool_recommendation():
    need = input("What do you need AI tools for? (Text Analysis, Image Processing, Data Analysis, Research): ").strip().lower()

    if need == "text analysis":
        print("You can explore tools like GPT-3 for generating text or analyzing large amounts of written content.")
    elif need == "image processing":
        print("For image processing, try OpenCV or deep learning libraries like TensorFlow and Keras.")
    elif need == "data analysis":
        print("Pandas and Scikit-learn are great for handling data analysis tasks. You might also want to look into AI-powered dashboards like Power BI.")
    elif need == "research":
        print("AI tools like Google Scholar‚Äôs AI-enhanced search or semantic search engines can streamline your research process.")
    else:
        print("Please provide a valid need (Text Analysis, Image Processing, Data Analysis, Research).")

# Testing the bot
chatbot_ai_tool_recommendation()

"""#Chatbot 13: AI Ethics Insight Bot
This chatbot explores the user‚Äôs ethical concerns regarding AI, drawing insights from their responses to the Q9.x questions.


"""

def chatbot_ai_ethics_discussion():
    concern = input("What concerns you most about AI ethics? (Bias, Privacy, Accountability, Transparency): ").strip().lower()

    if concern == "bias":
        print("AI bias is a critical issue. It‚Äôs important to ensure datasets are representative to avoid unfair outcomes.")
    elif concern == "privacy":
        print("AI privacy concerns are valid. Make sure the AI tools you use comply with privacy laws like GDPR.")
    elif concern == "accountability":
        print("AI accountability is still a growing field. It's vital to clearly define who is responsible for AI decisions.")
    elif concern == "transparency":
        print("Transparency in AI models (such as explainability in decision-making) is essential to build trust in AI technologies.")
    else:
        print("Please enter a valid concern (Bias, Privacy, Accountability, Transparency).")

# Testing the bot
chatbot_ai_ethics_discussion()

"""#Chatbot 14: AI Learning Difficulty Support Bot
This bot identifies challenges the user faces while learning AI tools‚Äîbased on Q5.x‚Äîand provides motivation and helpful resources to overcome them.


"""

def chatbot_ai_learning_difficulty():
    difficulty = input("How difficult do you find learning AI tools? (Very Difficult, Difficult, Moderate, Easy): ").strip().lower()

    if difficulty == "very difficult":
        print("AI can be challenging, but start with basic tutorials on YouTube or AI courses on platforms like Coursera to ease the process.")
    elif difficulty == "difficult":
        print("AI requires practice. Try solving small projects or joining communities like Kaggle to learn through experience.")
    elif difficulty == "moderate":
        print("You‚Äôre progressing well! Keep learning and experimenting with new tools. Practice makes perfect.")
    elif difficulty == "easy":
        print("Great! Since you find AI learning easy, consider exploring more complex projects or even participating in AI challenges.")
    else:
        print("Please provide a valid difficulty level (Very Difficult, Difficult, Moderate, Easy).")

# Testing the bot
chatbot_ai_learning_difficulty()

"""#Chatbot 15: Future AI Trends Explorer Bot
This bot engages users in a discussion about upcoming AI trends and their potential influence on the user‚Äôs field of study (from Q2 and Q9.x).



"""

def chatbot_ai_future_trends():
    trend = input("What future AI trend are you most excited about? (AI in Education, AI in Healthcare, AI in Finance, AI in Art): ").strip().lower()

    if trend == "ai in education":
        print("AI in education is transforming how students learn, making personalized learning more accessible. It‚Äôs an exciting field!")
    elif trend == "ai in healthcare":
        print("AI in healthcare is making breakthroughs in diagnosis, personalized medicine, and patient care.")
    elif trend == "ai in finance":
        print("AI in finance is reshaping trading strategies, fraud detection, and financial advising. A trend to watch closely!")
    elif trend == "ai in art":
        print("AI is now creating art, music, and designs. The intersection of creativity and AI is a fascinating space!")
    else:
        print("Please enter a valid AI trend (AI in Education, AI in Healthcare, AI in Finance, AI in Art).")

# Testing the bot
chatbot_ai_future_trends()

"""#Chatbot 16: AI Personalization Feedback Bot
This chatbot gauges the user‚Äôs perception of personalized AI-based learning or work environments, using insights from Q5.x and Q8.x.


"""

def chatbot_ai_personalization():
    opinion = input("Do you think AI should be used to personalize learning or work environments? (Yes, No, Neutral): ").strip().lower()

    if opinion == "yes":
        print("Personalization can help create tailored learning experiences and enhance productivity at work.")
    elif opinion == "no":
        print("You might feel that personalization through AI could be intrusive. Privacy and transparency are key in AI applications.")
    elif opinion == "neutral":
        print("It's understandable to be undecided. The impact of personalization in AI can vary depending on its implementation.")
    else:
        print("Please provide a valid response (Yes, No, Neutral).")

# Testing the bot
chatbot_ai_personalization()

"""#Chatbot 17: AI Career Advisor Bot
This bot offers personalized career guidance based on the user‚Äôs degree (Q2), field of study (Q3), and their agreement with AI-related statements (Q5.x).


"""

def chatbot_ai_career_guidance():
    degree = input("What is your degree? (Bachelor, Master, PhD): ").strip().lower()
    field_of_study = input("What is your field of study? (e.g., International Economic Relations, Computer Science): ").strip().lower()

    if degree == "bachelor":
        if field_of_study == "international economic relations":
            print("For Bachelor's in International Economic Relations, you could consider careers in economic analysis, international trade consulting, or global business strategy. AI can assist with data-driven decisions.")
        else:
            print(f"For a Bachelor's in {field_of_study}, AI skills in data analysis, automation, and predictive modeling can open many doors.")
    elif degree == "master":
        if field_of_study == "international economic relations":
            print("With a Master's in International Economic Relations, you could explore roles like international economic policy advisor or AI applications in international market forecasting.")
        else:
            print(f"A Master's in {field_of_study} combined with AI expertise can lead to advanced roles like AI research or AI-powered innovations in your domain.")
    elif degree == "phd":
        print("With a PhD, you can delve into AI research, developing new AI models, or leading AI innovation in your field.")
    else:
        print("Please enter a valid degree (Bachelor, Master, PhD).")

# Testing the bot
chatbot_ai_career_guidance()

"""#Chatbot 18: AI Time Management Assistant
This chatbot provides tips for effectively managing time to learn AI tools, especially for users struggling to balance work and learning (Q5.x-based).



"""

def chatbot_ai_time_management():
    time_difficulty = input("How often do you find it difficult to find time for learning AI? (Often, Sometimes, Rarely): ").strip().lower()

    if time_difficulty == "often":
        print("It‚Äôs great that you want to learn AI, but finding time can be tricky. Try scheduling small, focused sessions (15-30 minutes) in your weekly calendar to slowly build your AI skills.")
    elif time_difficulty == "sometimes":
        print("AI learning can be demanding, but finding some time each week can help you progress. Consider learning on weekends or during free time with bite-sized content like YouTube videos.")
    elif time_difficulty == "rarely":
        print("You seem to be managing your time well. Keep exploring new topics and experimenting with AI projects whenever you get a chance!")
    else:
        print("Please enter a valid response (Often, Sometimes, Rarely).")

# Testing the bot
chatbot_ai_time_management()

"""#Chatbot 19: AI Research Explorer Bot
This bot helps users discover potential AI research areas, drawing from their academic background (Q3) and ethical interests (Q9.x).


"""

def chatbot_ai_research_suggestions():
    field_of_study = input("What is your field of study? (e.g., International Economic Relations, Computer Science): ").strip().lower()
    ethical_concern = input("What ethical concern in AI are you interested in exploring? (Bias, Privacy, Accountability, Transparency): ").strip().lower()

    if ethical_concern == "bias":
        print(f"In {field_of_study}, research how bias in AI algorithms can affect decision-making processes in international trade, global policies, or economic forecasts.")
    elif ethical_concern == "privacy":
        print(f"Privacy concerns in AI are crucial in {field_of_study}. You can explore how AI technologies impact privacy in global business transactions or international data handling.")
    elif ethical_concern == "accountability":
        print(f"Explore how AI accountability is managed in {field_of_study}, such as responsibility for AI-driven decisions in economic markets or international relations.")
    elif ethical_concern == "transparency":
        print(f"Transparency is key to AI. In {field_of_study}, you can explore how transparent AI models can improve international business transparency or economic predictions.")
    else:
        print("Please enter a valid ethical concern (Bias, Privacy, Accountability, Transparency).")

# Testing the bot
chatbot_ai_research_suggestions()

"""#Chatbot 20: AI Learning Style Analyzer
This chatbot determines the user‚Äôs preferred learning style for AI‚Äîstructured or self-paced‚Äîbased on responses from Q5.x.


"""

def chatbot_ai_learning_style():
    structured_learning = input("Do you prefer structured learning (courses, curriculums) or self-paced exploration? (Structured, Self-paced): ").strip().lower()

    if structured_learning == "structured":
        print("If you prefer structured learning, try enrolling in comprehensive AI courses on platforms like Coursera or edX, where you can follow a set curriculum with guided learning.")
    elif structured_learning == "self-paced":
        print("For self-paced learning, explore free resources like GitHub repositories, AI blogs, or YouTube tutorials to learn AI at your own speed.")
    else:
        print("Please enter a valid learning preference (Structured, Self-paced).")

# Testing the bot
chatbot_ai_learning_style()

"""#Chatbot 21: AI Skill Development Bot
This bot recommends key skills to enhance AI proficiency, personalized to the user‚Äôs current experience level as indicated in Q4 and Q5.x.
"""

def chatbot_ai_skill_building():
    experience_level = input("What is your current experience level with AI? (Beginner, Intermediate, Advanced): ").strip().lower()

    if experience_level == "beginner":
        print("Start with basic skills like Python programming, data handling (Pandas), and learning simple AI concepts like classification and regression.")
    elif experience_level == "intermediate":
        print("Enhance your skills by diving into neural networks, deep learning, and working with popular AI libraries like TensorFlow and PyTorch.")
    elif experience_level == "advanced":
        print("Focus on mastering AI frameworks, optimizing deep learning models, or exploring research-level AI topics such as reinforcement learning or generative models.")
    else:
        print("Please enter a valid experience level (Beginner, Intermediate, Advanced).")

# Testing the bot
chatbot_ai_skill_building()

"""#Chatbot 22: AI Tool Usage Pattern Bot"""

def ai_tool_usage_pattern(q4_response):
    if q4_response.lower() in ["daily", "often"]:
        return "You're using AI tools frequently! Consider exploring advanced features or contributing to communities."
    else:
        return "Try to integrate AI tools more into your routine to gain proficiency."

print(ai_tool_usage_pattern("Often"))

"""# Chatbot 23: AI Course Recommendation Bot


"""

def recommend_course(q5_interest):
    if "learning" in q5_interest.lower():
        return "Based on your interest, you might enjoy 'DeepLearning.AI' or 'Fast.ai'."
    else:
        return "Consider exploring beginner courses on Coursera or edX to get started with AI."

print(recommend_course("I'm interested in learning AI"))

"""Chatbot 24: AI Goal Tracker Bot"""

def track_ai_goals(q5_goals):
    if "career" in q5_goals.lower():
        return "You're goal-oriented! Build a project portfolio Veerendra and target AI-related roles."
    else:
        return "Try setting short-term AI learning goals to stay motivated."

print(track_ai_goals("I want to use AI in my career"))

""" Chatbot 25: AI Exploration Curiosity Bot


"""

def curiosity_level(q5_x_input):
    if "explore" in q5_x_input.lower():
        return "Curious minds thrive in AI! Keep experimenting with new tools and datasets."
    return "Exploration is key‚Äîtry checking out open-source AI repositories!"

print(curiosity_level("I love to explore different AI tools"))

"""#Chatbot 26: AI Progress Check Bot

"""

def progress_check(q4_freq, q5_skill):
    if q4_freq.lower() == "often" and "beginner" in q5_skill.lower():
        return "You're progressing well‚Äîkeep going and try intermediate-level problems."
    return "Let‚Äôs make a plan to improve your AI usage frequency or technical skills."

print(progress_check("Often", "I'm still a beginner"))

"""#Chatbot 27: AI Project Builder Bot"""

def suggest_project(q3_field):
    projects = {
        "computer science": "Build a chatbot or a recommendation system.",
        "marketing": "Try sentiment analysis using AI.",
        "finance": "Create a stock price predictor using LSTM."
    }
    return projects.get(q3_field.lower(), "Try building a basic AI model using your domain knowledge.")

print(suggest_project("Marketing"))

"""#Chatbot 28: AI Beginner Helper Bot

"""

def ai_beginner_helper(q4_response):
    if q4_response.lower() in ["none", "no experience", "beginner"]:
        return "You're just starting with AI‚Äîno worries! Would you like some beginner-friendly learning paths or tools?"
    return "It looks like you already have some AI exposure. Ready to explore more advanced tools?"

"""#Chatbot 29: AI Awareness Evaluator
Evaluates how aware a person is about AI concepts using Q5.1‚ÄìQ5.6.
"""

def ai_awareness_score(responses):
    score = sum(int(resp) for resp in responses)  # assuming values are 1‚Äì5
    if score < 15:
        return "You seem unsure about AI concepts. Want to take a quick intro quiz?"
    elif score < 25:
        return "You're on your way! Would you like to learn more through videos or interactive tools?"
    else:
        return "You have strong AI awareness! Want recommendations for advanced topics?"

"""#Chatbot 30: Career-Aligned AI Recommender

Suggests AI tools or courses based on degree and field (Q2 & Q3).
"""

import re

def feedback_analyzer(q10_response):
    if re.search(r"(difficult|confusing|hard)", q10_response.lower()):
        return "Thanks for the feedback. Would you like to join our AI learning support group?"
    elif re.search(r"(interesting|helpful|fun)", q10_response.lower()):
        return "Glad you‚Äôre enjoying it! Want to take a quiz to discover your next learning module?"
    return "Thanks for sharing your thoughts! Would you like to receive updates or tips?"

"""#Chatbot 31: Feedback Analyzer Bot
 Analyzes open-text feedback in Q10 to suggest next steps (requires NLP).
"""

import re

def feedback_analyzer(q10_response):
    if re.search(r"(difficult|confusing|hard)", q10_response.lower()):
        return "Thanks for the feedback. Would you like to join our AI learning support group?"
    elif re.search(r"(interesting|helpful|fun)", q10_response.lower()):
        return "Glad you‚Äôre enjoying it! Want to take a quiz to discover your next learning module?"
    return "Thanks for sharing your thoughts! Would you like to receive updates or tips?"

